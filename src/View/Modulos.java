/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Componentes.FrameRecrea;
import Componentes.PanelRecrea;
import Contrato.ContratoBotones;
import Contrato.ContratoGeneral;
import Controller.ControllerConsultar;
import Controller.Util;
import Controller.WindowsCreate;
import Model.Objetos.Actividad;
import Model.Objetos.Leccion;
import Model.Objetos.Materia;
import Model.Objetos.Persona;
import java.awt.event.ActionEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jdom2.JDOMException;

/**
 * Clase que contiene las opciones de las lecciones que hay en una mat√©ria
 * @author Manuel Goncalves L.
 */
public class Modulos extends FrameRecrea implements ContratoGeneral,ContratoBotones {

       private PanelRecrea PN_Botones;
       private final String rutaModulo;
       private List<Leccion> leccion;
       private Persona usuario=new Persona();
       private Actividad actividad;
       private final Inicio inicio;
       private final Materia materia;
       private final ControllerConsultar info;
       
       public Modulos(String ruta,Materia g, Persona usr,Inicio ini){
           initComponents();
           info=new ControllerConsultar();
           rutaModulo=ruta;//se guarda en memoria la ruta del archivo en que estoy
           materia=g;
           usuario=usr;
           inicio=ini;
           cargarInfo();
           this.fullScreen();
           
       }
       private void cargarInfo(){
           
           MB_Recrea.setContrato(this);
           leccion=materia.getAsignaturas();
           WindowsCreate wc=new WindowsCreate(materia.getAsignaturas().size(),this);
           PN_Botones=wc.mostrarBotEj(materia.getAsignaturas());
           this.configuracion(PN_Botones);
       }
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MB_Recrea = new Componentes.MenuBarRecrea(this);
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MB_Recrea.add(jMenu2);

        setJMenuBar(MB_Recrea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Modulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Modulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Modulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Modulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Modulos("",null,null,null).setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Componentes.MenuBarRecrea MB_Recrea;
    private javax.swing.JMenu jMenu2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void ActionSiguiente(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void ActionSalir(ActionEvent e) {
      try{
            //poner gif de cargando
                
                inicio.setVisible(true);
                this.setVisible(false);
                this.dispose();

            }
        catch (Exception ex){
         System.out.println("Error en salir Modulos: "+e);
        }
    }

    @Override
    public void ActionOpciones(ActionEvent ae) {

        for (int i=0;i<leccion.size();i++){
          if( ae.getActionCommand().equals(leccion.get(i).getNombre())){
              
                if(leccion.get(i).getEjercicios().size()==0)
                    JOptionPane.showMessageDialog(this,Util.MENSAJE_NOHAYEJERCICIOS, Util.DIALOG_TITULO_MENSAJE, JOptionPane.INFORMATION_MESSAGE);
                else{
                    
                  actividad=new Actividad();
                  actividad.SetNombre(leccion.get(i).getNombre());
                  usuario.addActividad(actividad);
                 Practica Child=new Practica(leccion.get(i),usuario,this,0);
                 Child.setVisible(true);
                 this.setVisible(false);
                 
                 }
                 break;
            }
        }
     }

    @Override
    public void ActionSonido(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    @Override
    public void SetEnable(boolean bol){
       this.setEnabled(bol);
    }

    @Override
    public void Reaload() {
    try {
        inicio.IniciarVentana();
        this.setVisible(false);
        this.dispose();
        
    } catch (JDOMException ex) {
        Logger.getLogger(Modulos.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    
    @Override
    public Persona GetPersona() {
      return info.CargarPersona();
    }
    
    @Override
    public void avisoMensaje(String mensaje) {
        JOptionPane.showMessageDialog(this,mensaje, Util.DIALOG_TITULO_MENSAJE, JOptionPane.INFORMATION_MESSAGE);
                }
}
