package View;

import View.Agregar.AgregarUsuario;
import Componentes.FrameRecrea;
import Componentes.PanelRecrea;
import Contrato.ContratoBotones;
import Contrato.ContratoGeneral;
import Controller.ControllerConsultar;
import Controller.Util;
import Controller.WindowsCreate;
import Model.Objetos.Materia;
import Model.Objetos.Persona;
import java.awt.event.ActionEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jdom2.JDOMException;




/**
 * Clase que contiene la interfaz incial con las materias disponibles 
 * @author Manuel Goncalves L.
 */
public class Inicio extends FrameRecrea implements ContratoGeneral,ContratoBotones{

    private PanelRecrea PN_Botones;
    private List<Materia> materias;
    private final String ruta=Controller.Util.ARCHIVOS_XML_PATH+Util.MATERIAS_TAG+Util.ARCHIVO_XML;
    private Persona usuario=new Persona();
    private Modulos Child;
    private final ControllerConsultar info;
    
    public Inicio() throws JDOMException {
        info=new ControllerConsultar(ruta);
       //se inician aca los componentes para que de tiempo
        //a que se cargue la persona y sus actividades
        initComponents(); 
        cargarInfo();
        this.fullScreen();
    }
    
    private void cargarInfo(){
        usuario=info.CargarPersona();
        materias=info.cargarMateria();
        WindowsCreate wc=new WindowsCreate(materias.size(),this);
        PN_Botones=wc.mostrarBot(materias);
        this.configuracion(PN_Botones);
        MB_Recrea.setContrato(this); //para aseignar los ActionListener
        
        //Hacer que estas lineas funcionen para que sea mas eficiente
       // this.paintAll(this.getGraphics());  
        //this.validate();
        //this.repaint();
    }
    /**
     * MÃ©todo donde se evalua si existe un usuario registrado para abrir la
     * ventana principal de lo contrario se desplega la ventana de registro 
     * de usuario
   */
    protected void IniciarVentana() throws JDOMException{
        Controller.ControllerCrear.archivoMateria();
        if(!Controller.ControllerConsultar.consultarUsuario()){
               new AgregarUsuario().setVisible(true);
               
           }
        else{
            new Inicio().setVisible(true);
        }
               this.setVisible(false);
               this.dispose();
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MB_Recrea = new Componentes.MenuBarRecrea(this);
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MB_Recrea.add(jMenu4);

        setJMenuBar(MB_Recrea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 796, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {  
                     Controller.ControllerCrear.archivoMateria();
                     if(!Controller.ControllerConsultar.consultarUsuario())
                        new AgregarUsuario().setVisible(true);
                      else
                        new Inicio().setVisible(true);
                } catch (JDOMException ex) {
                    Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Componentes.MenuBarRecrea MB_Recrea;
    private javax.swing.JMenu jMenu4;
    // End of variables declaration//GEN-END:variables


    @Override
    public void ActionSiguiente(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void ActionSalir(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void ActionOpciones(ActionEvent ae) {
              if(this.isVisible())
        {
        System.out.println(ae.getActionCommand());
       // Modulos Child= new Modulos();
        for(int i=0;i<materias.size();i++){
            if(ae.getActionCommand().equals(materias.get(i).getNombre())){
                if(materias.get(i).getAsignaturas().size() == 0)
                     JOptionPane.showMessageDialog(this,Util.MENSAJE_NOHAYLECCION, Util.DIALOG_TITULO_MENSAJE, JOptionPane.INFORMATION_MESSAGE);
                else{
                Child= new Modulos(materias.get(i).getHijoURL(),materias.get(i), usuario, this);
                Child.setVisible(true);
                this.setVisible(false);
                }
                break;
            }
        }
        } 
    }

    @Override
    public void ActionSonido(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void SetEnable(boolean bol){
       this.setEnabled(bol);
    }

    @Override
    public void Reaload() {
   // cargarInfo(); cuando el repaint(); funcione quitar este comentario
        try {
            IniciarVentana();
        } catch (JDOMException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
    
   }

    @Override
    public Persona GetPersona() {
      return info.CargarPersona();
    }

    @Override
    public void avisoMensaje(String mensaje) {
        JOptionPane.showMessageDialog(this,mensaje, Util.DIALOG_TITULO_MENSAJE, JOptionPane.INFORMATION_MESSAGE);
                }
}

